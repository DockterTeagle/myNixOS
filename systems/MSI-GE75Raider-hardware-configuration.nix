# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  modulesPath,
  ...
}:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot = {
    extraModulePackages = [ ];
    kernelModules = [ "kvm-intel" ];
    initrd = {
      luks.devices = {
        "luks-f0bd682b-a6cc-4b16-835a-81f3be960b74".device = "/dev/disk/by-uuid/f0bd682b-a6cc-4b16-835a-81f3be960b74";
        "EHDD".device = "/dev/disk/by-uuid/84989735-d8b3-4005-89d1-c03af68e7408";
      };
      kernelModules = [ ];
      availableKernelModules = [
        "xhci_pci"
        "ahci"
        "nvme"
        "usbhid"
        "sd_mod"
        "rtsx_usb_sdmmc"
      ];
    };
  };
  fileSystems = {
    "/" = {
      device = "/dev/disk/by-uuid/62ff14dc-cadc-4a4a-af03-66459dca395a";
      fsType = "ext4";
    };
    "/boot" = {
      device = "/dev/disk/by-uuid/3BE8-556E";
      fsType = "vfat";
      options = [
        "fmask=0022"
        "dmask=0022"
      ];
    };
    "/Drives/EHDD" = {
      device = "/dev/disk/by-uuid/a6e7bbbd-757a-4f8d-981d-47630bfac731";
      fsType = "ext4";
    };
  };
  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s20f0u4u5.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp3s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
