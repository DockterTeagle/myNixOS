local map = vim.keymap.set
local wk = require("which-key")
wk.add({ { "<leader>d", group = "debug" }, { "<leader>ds", group = "Step" } })
map("n", "<leader>db", function()
	require("dap").toggle_breakpoint()
end, { desc = "Add breakpoint at line" })
map("n", "<leader>dsb", function()
	require("dap").step_back()
end, { desc = "Step back" })
map("n", "<leader>dsi", function()
	require("dap").step_into()
end, { desc = "Step into function" })
map("n", "<leader>dso", function()
	require("dap").step_over()
end, { desc = "step over Function" })
map("n", "<leader>dsO", function()
	require("dap").step_out()
end, { desc = "Step out of function" })
map("n", "<leader>dc", function()
	require("dap").continue()
end, { desc = "start or continue the debugger" })
map("n", "<leader>dus", function()
	local widgets = require("dap.ui.widgets")
	local sidebar = widgets.sidebar(widgets.scopes)
	sidebar.open()
end, { desc = "Open debugging sidebar" })
map("n", "<leader>dC", function()
	require("dap").run_to_cursor()
end, { desc = "Run to Cursor" })
map("n", "<leader>dd", function()
	require("dap").disconnect()
end, { desc = "Disconnect from session" })
map("n", "<leader>dss", function()
	require("dap").session()
end, { desc = "Get current session" })
map("n", "<leader>dp", function()
	require("dap").pause()
end, { desc = "Pause the debug adapter" })
map("n", "<leader>dr", function()
	require("dap").repl.toggle()
end, { desc = "toggle repl" })
